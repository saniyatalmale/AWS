**1. What is an Operating System?**

#### ‚úÖ Detailed Version (English):

An operating system (OS) is a system software that acts as an intermediary between computer hardware and the user. It manages the hardware (CPU, memory, disk, input/output devices) and provides services that allow applications to run efficiently. The OS handles tasks like memory management, process scheduling, device control, file system operations, and security.

Examples: Windows, Linux, macOS, Unix.

#### ‚úÖ Short Version (English):

An operating system is software that controls hardware and manages system resources to allow software to run.

#### ‚úÖ Hindi Explanation:

‡§ë‡§™‡§∞‡•á‡§ü‡§ø‡§Ç‡§ó ‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ ‡§è‡§ï ‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ ‡§∏‡•â‡§´‡•ç‡§ü‡§µ‡•á‡§Ø‡§∞ ‡§π‡•à ‡§ú‡•ã ‡§ï‡§Ç‡§™‡•ç‡§Ø‡•Ç‡§ü‡§∞ ‡§π‡§æ‡§∞‡•ç‡§°‡§µ‡•á‡§Ø‡§∞ ‡§î‡§∞ ‡§Ø‡•Ç‡§ú‡§º‡§∞ ‡§ï‡•á ‡§¨‡•Ä‡§ö ‡§è‡§ï ‡§Æ‡§æ‡§ß‡•ç‡§Ø‡§Æ ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç ‡§ï‡§æ‡§Æ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§ ‡§Ø‡§π ‡§π‡§æ‡§∞‡•ç‡§°‡§µ‡•á‡§Ø‡§∞ ‡§î‡§∞ ‡§∏‡•â‡§´‡•ç‡§ü‡§µ‡•á‡§Ø‡§∞ ‡§¶‡•ã‡§®‡•ã‡§Ç ‡§ï‡•ã ‡§Æ‡•à‡§®‡•á‡§ú ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§

---

### **2. Difference between Linux and Windows**

#### ‚úÖ Detailed Version (English):

| Feature               | Linux                    | Windows                        |
| --------------------- | ------------------------ | ------------------------------ |
| **License**           | Open-source (Free)       | Proprietary (Paid)             |
| **Customization**     | Highly customizable      | Limited customization          |
| **Security**          | More secure              | More vulnerable to viruses     |
| **User Interface**    | CLI and GUI              | Mostly GUI                     |
| **Usage**             | Developers, servers      | General users, office PCs      |
| **File System**       | Ext3/Ext4                | NTFS                           |
| **Community Support** | Strong community support | Official and community support |

#### ‚úÖ Short Version (English):

* Linux is open-source, free, and used in servers.
* Windows is commercial, user-friendly, and widely used on personal computers.

#### ‚úÖ Hindi Explanation:

* Linux ‡§è‡§ï ‡§ì‡§™‡§®-‡§∏‡•ã‡§∞‡•ç‡§∏ ‡§î‡§∞ ‡§´‡•ç‡§∞‡•Ä ‡§ë‡§™‡§∞‡•á‡§ü‡§ø‡§Ç‡§ó ‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ ‡§π‡•à, ‡§ú‡•ç‡§Ø‡§æ‡§¶‡§æ‡§§‡§∞ ‡§∏‡§∞‡•ç‡§µ‡§∞ ‡§Æ‡•á‡§Ç ‡§Ø‡•Ç‡§ú‡§º ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§
* Windows ‡§è‡§ï ‡§™‡•á‡§° ‡§ë‡§™‡§∞‡•á‡§ü‡§ø‡§Ç‡§ó ‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ ‡§π‡•à, ‡§ú‡§ø‡§∏‡•á ‡§™‡§∞‡•ç‡§∏‡§®‡§≤ ‡§ï‡§Ç‡§™‡•ç‡§Ø‡•Ç‡§ü‡§∞ ‡§™‡§∞ ‡§ú‡•ç‡§Ø‡§æ‡§¶‡§æ ‡§Ø‡•Ç‡§ú‡§º ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‡•§

üìå **Image for Linux vs Windows Difference** ‚Äì Please let me know if you want a comparison chart image as well. I can create and share it.

---

### **3. What is Open Source?**

#### ‚úÖ Detailed Version (English):

Open-source software is software with publicly available source code. This means anyone can view, modify, enhance, or distribute it. Open-source promotes transparency, collaboration, and innovation. Examples include Linux, Apache, Git, and MySQL.

#### ‚úÖ Short Version (English):

Open-source software allows users to access, modify, and distribute the source code freely.

#### ‚úÖ Hindi Explanation:

‡§ì‡§™‡§®-‡§∏‡•ã‡§∞‡•ç‡§∏ ‡§∏‡•â‡§´‡•ç‡§ü‡§µ‡•á‡§Ø‡§∞ ‡§µ‡•ã ‡§π‡•ã‡§§‡§æ ‡§π‡•à ‡§ú‡§ø‡§∏‡§ï‡§æ ‡§∏‡•ã‡§∞‡•ç‡§∏ ‡§ï‡•ã‡§° ‡§™‡§¨‡•ç‡§≤‡§ø‡§ï ‡§ï‡•ã ‡§´‡•ç‡§∞‡•Ä ‡§Æ‡•á‡§Ç ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§ ‡§ï‡•ã‡§à ‡§≠‡•Ä ‡§á‡§∏‡•á ‡§¶‡•á‡§ñ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à, ‡§¨‡§¶‡§≤ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à ‡§î‡§∞ ‡§∂‡•á‡§Ø‡§∞ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à‡•§

---

### **4. Explain Linux Architecture**

#### ‚úÖ Detailed Version (English):

Linux architecture has four main components:

1. **Hardware** ‚Äì Physical components like CPU, RAM, etc.
2. **Kernel** ‚Äì The core of Linux that manages hardware, memory, processes, and system calls.
3. **Shell** ‚Äì Interface between user and kernel. Takes user commands and sends them to the kernel.
4. **Utilities/Applications** ‚Äì System tools and software used by users to interact with the system.

#### ‚úÖ Short Version (English):

Linux architecture includes hardware, kernel, shell, and utilities to manage the system.

#### ‚úÖ Hindi Explanation:

Linux ‡§ï‡•Ä ‡§∏‡§Ç‡§∞‡§ö‡§®‡§æ ‡§Æ‡•á‡§Ç ‡§π‡§æ‡§∞‡•ç‡§°‡§µ‡•á‡§Ø‡§∞, ‡§ï‡§∞‡•ç‡§®‡•á‡§≤, ‡§∂‡•á‡§≤ ‡§î‡§∞ ‡§Ø‡•Ç‡§ü‡§ø‡§≤‡§ø‡§ü‡•Ä ‡§ü‡•Ç‡§≤‡•ç‡§∏ ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•ã‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§ï‡§∞‡•ç‡§®‡•á‡§≤ ‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ ‡§ï‡•ã ‡§ï‡§Ç‡§ü‡•ç‡§∞‡•ã‡§≤ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à ‡§î‡§∞ ‡§∂‡•á‡§≤ ‡§Ø‡•Ç‡§ú‡§º‡§∞ ‡§∏‡•á ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§≤‡•á‡§§‡§æ ‡§π‡•à‡•§

---

### **5. What is Virtualization?**

#### ‚úÖ Detailed Version (English):

Virtualization is the process of creating virtual versions of physical resources such as servers, storage, or networks. It allows one physical system to host multiple virtual machines (VMs), each running its own OS. This improves resource utilization, isolation, and flexibility.

#### ‚úÖ Short Version (English):

Virtualization allows multiple virtual machines to run on a single physical machine.

#### ‚úÖ Hindi Explanation:

Virtualization ‡§è‡§ï ‡§§‡§ï‡§®‡•Ä‡§ï ‡§π‡•à ‡§ú‡§ø‡§∏‡§Æ‡•á‡§Ç ‡§è‡§ï ‡§´‡§ø‡§ú‡§ø‡§ï‡§≤ ‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ ‡§™‡§∞ ‡§ï‡§à ‡§µ‡§∞‡•ç‡§ö‡•Å‡§Ö‡§≤ ‡§Æ‡§∂‡•Ä‡§®‡•á‡§Ç ‡§ö‡§≤‡§æ‡§à ‡§ú‡§æ‡§§‡•Ä ‡§π‡•à‡§Ç‡•§ ‡§á‡§∏‡§∏‡•á ‡§∞‡§ø‡§∏‡•ã‡§∞‡•ç‡§∏‡•á‡§∏ ‡§ï‡§æ ‡§¨‡•á‡§π‡§§‡§∞ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§

---

### **6. Explain Hypervisor and its Types**

#### ‚úÖ Detailed Version (English):

A **hypervisor** is software that enables virtualization by creating and managing multiple virtual machines (VMs) on a single physical system. Each VM has its own OS and runs independently.

**Types of Hypervisors:**

* **Type 1 (Bare-metal):** Runs directly on hardware without any host OS. Example: VMware ESXi, Microsoft Hyper-V, Xen.
* **Type 2 (Hosted):** Runs on top of a host operating system. Example: VirtualBox, VMware Workstation.

#### ‚úÖ Short Version (English):

A hypervisor manages virtual machines.

* Type 1: Runs directly on hardware.
* Type 2: Runs on host OS.

#### ‚úÖ Hindi Explanation:

Hypervisor ‡§è‡§ï ‡§∏‡•â‡§´‡•ç‡§ü‡§µ‡•á‡§Ø‡§∞ ‡§π‡•à ‡§ú‡•ã ‡§µ‡§∞‡•ç‡§ö‡•Å‡§Ö‡§≤ ‡§Æ‡§∂‡•Ä‡§®‡•á‡§Ç ‡§¨‡§®‡§æ‡§®‡•á ‡§î‡§∞ ‡§ö‡§≤‡§æ‡§®‡•á ‡§ï‡§æ ‡§ï‡§æ‡§Æ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§

* Type 1: ‡§π‡§æ‡§∞‡•ç‡§°‡§µ‡•á‡§Ø‡§∞ ‡§™‡§∞ ‡§°‡§æ‡§Ø‡§∞‡•á‡§ï‡•ç‡§ü ‡§ö‡§≤‡§§‡§æ ‡§π‡•à‡•§
* Type 2: ‡§ì‡§è‡§∏ ‡§ï‡•á ‡§ä‡§™‡§∞ ‡§ö‡§≤‡§§‡§æ ‡§π‡•à‡•§

---

### **7. What is Shell, its Types, and How to Check Current Shell?**

#### ‚úÖ Detailed Version (English):

A **shell** is a command-line interpreter that allows users to interact with the operating system. It takes commands from the user and passes them to the kernel.

**Types of Shells:**

* **Bash (Bourne Again SHell)** ‚Äì Most common
* **Sh (Bourne Shell)**
* **Csh (C Shell)**
* **Ksh (Korn Shell)**
* **Zsh (Z Shell)**

**Check Current Shell Command:**

```bash
echo $SHELL
```

#### ‚úÖ Short Version (English):

A shell is a program that executes user commands.
To check shell: `echo $SHELL`

#### ‚úÖ Hindi Explanation:

Shell ‡§è‡§ï ‡§™‡•ç‡§∞‡•ã‡§ó‡•ç‡§∞‡§æ‡§Æ ‡§π‡•à ‡§ú‡•ã ‡§Ø‡•Ç‡§ú‡§º‡§∞ ‡§ï‡•Ä ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§ï‡•ã OS ‡§§‡§ï ‡§™‡§π‡•Å‡§Ç‡§ö‡§æ‡§§‡§æ ‡§π‡•à‡•§
‡§Ö‡§™‡§®‡§æ shell ‡§¶‡•á‡§ñ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è: `echo $SHELL`

---

### **8. What is Kernel and Command to Check Kernel Info?**

#### ‚úÖ Detailed Version (English):

The **kernel** is the core of the operating system. It manages CPU, memory, devices, and system calls. It acts as a bridge between the hardware and software.

**Command to Check Kernel Version:**

```bash
uname -r
```

or

```bash
uname -a
```

#### ‚úÖ Short Version (English):

The kernel is the core of the OS.
To check kernel: `uname -r`

#### ‚úÖ Hindi Explanation:

Kernel OS ‡§ï‡§æ ‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§≠‡§æ‡§ó ‡§π‡•ã‡§§‡§æ ‡§π‡•à ‡§ú‡•ã ‡§π‡§æ‡§∞‡•ç‡§°‡§µ‡•á‡§Ø‡§∞ ‡§î‡§∞ ‡§∏‡•â‡§´‡•ç‡§ü‡§µ‡•á‡§Ø‡§∞ ‡§ï‡•á ‡§¨‡•Ä‡§ö ‡§á‡§Ç‡§ü‡§∞‡§´‡•á‡§∏ ‡§ï‡§æ ‡§ï‡§æ‡§Æ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§
Kernel ‡§µ‡§∞‡•ç‡§ú‡§º‡§® ‡§¶‡•á‡§ñ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è: `uname -r`

---

### **9. Command to Check OS Information**

#### ‚úÖ Detailed Version (English):

To view the Linux OS details, use:

```bash
cat /etc/os-release
```

or

```bash
lsb_release -a
```

This shows the name, version, and codename of the OS.

#### ‚úÖ Short Version (English):

Use `cat /etc/os-release` to see OS name and version.

#### ‚úÖ Hindi Explanation:

Linux OS ‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§¶‡•á‡§ñ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§π‡•à:
`cat /etc/os-release`

---

### **10. Command to Check Available Memory**

#### ‚úÖ Detailed Version (English):

To check memory usage in Linux, use:

```bash
free -h
```

It displays total, used, and free memory in human-readable format (`-h`).

Alternative:

```bash
top
```

(live view with memory stats)

#### ‚úÖ Short Version (English):

Use `free -h` to check memory status.

#### ‚úÖ Hindi Explanation:

‡§Æ‡•á‡§Æ‡•ã‡§∞‡•Ä ‡§ï‡•Ä ‡§∏‡•ç‡§•‡§ø‡§§‡§ø ‡§¶‡•á‡§ñ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§π‡•à:
`free -h`
(‡§Ø‡§π ‡§∞‡•à‡§Æ ‡§ï‡•Ä ‡§ü‡•ã‡§ü‡§≤, ‡§Ø‡•Ç‡§ú‡§º ‡§î‡§∞ ‡§´‡•ç‡§∞‡•Ä ‡§µ‡•à‡§≤‡•ç‡§Ø‡•Ç ‡§¶‡§ø‡§ñ‡§æ‡§§‡§æ ‡§π‡•à)

---
Perfect, Saniya! Let‚Äôs continue with the next set: **Questions 11 to 15** ‚Äî each with **Detailed Version ‚Üí Short Version ‚Üí Hindi Explanation**.

---

### **11. Command to Check Storage or Disk Info**

#### ‚úÖ Detailed Version (English):

To check disk usage and storage info, use:

```bash
df -h
```

* `df` stands for "disk filesystem"
* `-h` means human-readable (shows in GB/MB)

For block-level disk details:

```bash
lsblk
```

#### ‚úÖ Short Version (English):

Use `df -h` for disk usage and `lsblk` for device info.

#### ‚úÖ Hindi Explanation:

‡§∏‡•ç‡§ü‡•ã‡§∞‡•á‡§ú ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§¶‡•á‡§ñ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è:

* `df -h`: ‡§°‡§ø‡§∏‡•ç‡§ï ‡§Ø‡•Ç‡§ú‡§º‡•á‡§ú‡§º ‡§¶‡§ø‡§ñ‡§æ‡§§‡§æ ‡§π‡•à
* `lsblk`: ‡§∏‡•ç‡§ü‡•ã‡§∞‡•á‡§ú ‡§°‡§ø‡§µ‡§æ‡§á‡§∏‡•á‡§ú‡§º ‡§ï‡•Ä ‡§°‡§ø‡§ü‡•á‡§≤ ‡§¶‡§ø‡§ñ‡§æ‡§§‡§æ ‡§π‡•à

---

### **12. Command to Check Size of File/Directory**

#### ‚úÖ Detailed Version (English):

To check size of a **file or directory**:

```bash
du -sh filename_or_directory
```

* `du` = disk usage
* `-s` = summary
* `-h` = human-readable

For current directory size:

```bash
du -sh .
```

#### ‚úÖ Short Version (English):

Use `du -sh dir_or_file` to see size.

#### ‚úÖ Hindi Explanation:

‡§´‡§æ‡§á‡§≤ ‡§Ø‡§æ ‡§°‡§æ‡§Ø‡§∞‡•á‡§ï‡•ç‡§ü‡§∞‡•Ä ‡§ï‡§æ ‡§∏‡§æ‡§á‡§ú ‡§¶‡•á‡§ñ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è:

```bash
du -sh <‡§®‡§æ‡§Æ>
```

---

### **13. Explain Modes of Vim Editor**

#### ‚úÖ Detailed Version (English):

Vim has **3 main modes**:

1. **Normal Mode** ‚Äì For navigation and commands (default mode).
2. **Insert Mode** ‚Äì For editing/typing text (press `i` to enter).
3. **Command Mode** ‚Äì To save/quit etc. (press `:` in normal mode).

**Common commands:**

* `i`: insert mode
* `Esc`: back to normal mode
* `:w`: save
* `:q`: quit
* `:wq`: save and quit

#### ‚úÖ Short Version (English):

Vim has 3 modes ‚Äì Normal, Insert, and Command.
Use `i` to insert, `:wq` to save and quit.

#### ‚úÖ Hindi Explanation:

Vim editor ‡§ï‡•á ‡§§‡•Ä‡§® ‡§Æ‡•ã‡§° ‡§π‡•ã‡§§‡•á ‡§π‡•à‡§Ç:

1. Normal Mode ‚Äì ‡§®‡•á‡§µ‡§ø‡§ó‡•á‡§∂‡§®
2. Insert Mode ‚Äì ‡§≤‡§ø‡§ñ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è (`i`)
3. Command Mode ‚Äì ‡§∏‡•á‡§µ/‡§ï‡•ç‡§µ‡§ø‡§ü (`:wq`)

---

### **14. Difference Between `adduser` and `useradd`**

#### ‚úÖ Detailed Version (English):

| Feature       | `adduser`                  | `useradd`         |
| ------------- | -------------------------- | ----------------- |
| Type          | High-level script          | Low-level command |
| User-friendly | Yes (prompts for password) | No (needs flags)  |
| Home Dir      | Automatically created      | Needs `-m` option |
| Interactive   | Yes                        | No                |

#### ‚úÖ Short Version (English):

* `adduser`: easier, interactive
* `useradd`: requires options

#### ‚úÖ Hindi Explanation:

* `adduser`: ‡§Ø‡•Ç‡§ú‡§º‡§∞ ‡§¨‡§®‡§æ‡§®‡§æ ‡§Ü‡§∏‡§æ‡§®, ‡§ë‡§ü‡•ã‡§Æ‡•à‡§ü‡§ø‡§ï ‡§π‡•ã‡§Æ ‡§°‡§æ‡§á‡§∞‡•á‡§ï‡•ç‡§ü‡§∞‡•Ä ‡§¨‡§®‡§æ‡§§‡§æ ‡§π‡•à
* `useradd`: ‡§Æ‡•à‡§®‡•ç‡§Ø‡•Å‡§Ö‡§≤ ‡§π‡•à, ‡§´‡•ç‡§≤‡•à‡§ó‡•ç‡§∏ ‡§≤‡§ó‡§æ‡§®‡§æ ‡§™‡§°‡§º‡§§‡§æ ‡§π‡•à

---

### **15. Explain Skeleton Files**

#### ‚úÖ Detailed Version (English):

**Skeleton files** are default configuration files copied to a new user‚Äôs home directory when the user is created. They are stored in:

```bash
/etc/skel
```

Examples: `.bashrc`, `.profile`, `.bash_logout`

When a new user is created, these files are copied automatically to `/home/username`.

#### ‚úÖ Short Version (English):

Skeleton files in `/etc/skel` are copied to new users' home directories.

#### ‚úÖ Hindi Explanation:

Skeleton files `/etc/skel` ‡§Æ‡•á‡§Ç ‡§π‡•ã‡§§‡•á ‡§π‡•à‡§Ç ‡§î‡§∞ ‡§®‡§è ‡§Ø‡•Ç‡§ú‡§º‡§∞ ‡§ï‡•á ‡§π‡•ã‡§Æ ‡§°‡§æ‡§Ø‡§∞‡•á‡§ï‡•ç‡§ü‡§∞‡•Ä ‡§Æ‡•á‡§Ç ‡§ï‡•â‡§™‡•Ä ‡§π‡•ã ‡§ú‡§æ‡§§‡•á ‡§π‡•à‡§Ç, ‡§ú‡•à‡§∏‡•á `.bashrc`, `.profile`‡•§

---

Awesome, Saniya! Let‚Äôs now continue with **questions 16 to 20** ‚Äî each with **Detailed Version ‚Üí Short Version ‚Üí Hindi Explanation**.

---

### **16. Explain Fields of `/etc/passwd` File**

#### ‚úÖ Detailed Version (English):

The `/etc/passwd` file stores user account information. Each line represents one user and contains 7 fields separated by colons `:`:

```
username:password:UID:GID:comment:home_directory:shell
```

**Example:**

```
saniya:x:1001:1001:Saniya:/home/saniya:/bin/bash
```

| Field           | Meaning                                |
| --------------- | -------------------------------------- |
| username        | Login name                             |
| password        | `x` means password is in `/etc/shadow` |
| UID             | User ID                                |
| GID             | Group ID                               |
| comment         | Full name or description               |
| home\_directory | Default login directory                |
| shell           | Default shell                          |

#### ‚úÖ Short Version (English):

7 fields in `/etc/passwd`: username, password, UID, GID, comment, home dir, shell.

#### ‚úÖ Hindi Explanation:

`/etc/passwd` ‡§´‡§æ‡§á‡§≤ ‡§Æ‡•á‡§Ç ‡§Ø‡•Ç‡§ú‡§º‡§∞ ‡§ï‡•Ä ‡§°‡§ø‡§ü‡•á‡§≤‡•ç‡§∏ ‡§π‡•ã‡§§‡•Ä ‡§π‡•à‡§Ç:

1. ‡§Ø‡•Ç‡§ú‡§º‡§∞‡§®‡•á‡§Æ
2. ‡§™‡§æ‡§∏‡§µ‡§∞‡•ç‡§° (`x` ‡§Æ‡§§‡§≤‡§¨ `/etc/shadow` ‡§Æ‡•á‡§Ç ‡§π‡•à)
3. UID
4. GID
5. ‡§ï‡§Æ‡•á‡§Ç‡§ü
6. ‡§π‡•ã‡§Æ ‡§°‡§æ‡§á‡§∞‡•á‡§ï‡•ç‡§ü‡§∞‡•Ä
7. ‡§∂‡•á‡§≤

---

### **17. How to Check Which Group a User Belongs To?**

#### ‚úÖ Detailed Version (English):

You can use either of these commands:

```bash
groups username
```

or

```bash
id username
```

Example:

```bash
groups saniya
```

This will show all groups (primary and secondary) the user is part of.

#### ‚úÖ Short Version (English):

Use `groups username` or `id username` to check group.

#### ‚úÖ Hindi Explanation:

‡§Ø‡•Ç‡§ú‡§º‡§∞ ‡§ï‡§ø‡§∏ ‡§ó‡•ç‡§∞‡•Å‡§™ ‡§Æ‡•á‡§Ç ‡§π‡•à ‡§¶‡•á‡§ñ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è:

```bash
groups <username>
```

‡§Ø‡§æ

```bash
id <username>
```

---

### **18. Explain File Types in Linux**

#### ‚úÖ Detailed Version (English):

Linux supports multiple file types:

| Type              | Symbol | Description                  |
| ----------------- | ------ | ---------------------------- |
| Regular file      | `-`    | Text, binaries, etc.         |
| Directory         | `d`    | Folders                      |
| Symbolic link     | `l`    | Shortcut to another file     |
| Block device      | `b`    | Hardware storage (e.g., HDD) |
| Character device  | `c`    | Devices (e.g., keyboard)     |
| Socket            | `s`    | IPC (Inter-process Comm)     |
| FIFO (Named Pipe) | `p`    | Special file for processes   |

Check file type:

```bash
ls -l
```

#### ‚úÖ Short Version (English):

Types: Regular (-), Dir (d), Link (l), Block (b), Char (c), Socket (s), Pipe (p)

#### ‚úÖ Hindi Explanation:

Linux ‡§Æ‡•á‡§Ç ‡§ï‡§à ‡§´‡§æ‡§á‡§≤ ‡§ü‡§æ‡§á‡§™‡•ç‡§∏ ‡§π‡•ã‡§§‡•Ä ‡§π‡•à‡§Ç:

* `-` : ‡§®‡•â‡§∞‡•ç‡§Æ‡§≤ ‡§´‡§æ‡§á‡§≤
* `d` : ‡§°‡§æ‡§Ø‡§∞‡•á‡§ï‡•ç‡§ü‡§∞‡•Ä
* `l` : ‡§≤‡§ø‡§Ç‡§ï
* `b` : ‡§¨‡•ç‡§≤‡•â‡§ï ‡§°‡§ø‡§µ‡§æ‡§á‡§∏
* `c` : ‡§ï‡•à‡§∞‡•á‡§ï‡•ç‡§ü‡§∞ ‡§°‡§ø‡§µ‡§æ‡§á‡§∏
* `s` : ‡§∏‡•â‡§ï‡•á‡§ü
* `p` : ‡§™‡§æ‡§á‡§™

---

### **19. Difference Between Hard Link and Soft Link**

#### ‚úÖ Detailed Version (English):

| Feature        | Hard Link                       | Soft Link (Symbolic Link)       |
| -------------- | ------------------------------- | ------------------------------- |
| Points to      | File data (inode)               | File name/path                  |
| File removed   | Original file can be deleted    | Link breaks if original deleted |
| Across FS      | Not allowed across file systems | Allowed                         |
| Symbol in `ls` | No special symbol               | Shows as `l` and `->`           |

Create:

```bash
ln original.txt hardlink.txt      # Hard
ln -s original.txt softlink.txt   # Soft
```

#### ‚úÖ Short Version (English):

Hard Link = another name for file
Soft Link = shortcut (breaks if original is deleted)

#### ‚úÖ Hindi Explanation:

* **Hard Link**: ‡§´‡§æ‡§á‡§≤ ‡§ï‡§æ ‡§¶‡•Ç‡§∏‡§∞‡§æ ‡§®‡§æ‡§Æ (same inode)
* **Soft Link**: shortcut ‡§ú‡•à‡§∏‡§æ ‡§π‡•ã‡§§‡§æ ‡§π‡•à (original ‡§π‡§ü‡•á ‡§§‡•ã ‡§ü‡•Ç‡§ü‡•á‡§ó‡§æ)

---

### **20. How to Change Ownership of File/Directory?**

#### ‚úÖ Detailed Version (English):

Use the `chown` command:

```bash
chown newuser file.txt
```

To change both user and group:

```bash
chown newuser:newgroup file.txt
```

To change ownership recursively (for directories):

```bash
chown -R newuser:newgroup directory/
```

#### ‚úÖ Short Version (English):

Use `chown user:group file` to change ownership.

#### ‚úÖ Hindi Explanation:

‡§´‡§æ‡§á‡§≤ ‡§Ø‡§æ ‡§°‡§æ‡§Ø‡§∞‡•á‡§ï‡•ç‡§ü‡§∞‡•Ä ‡§ï‡§æ ‡§ì‡§®‡§∞ ‡§¨‡§¶‡§≤‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è:

```bash
chown <user>:<group> <file>
```
Great going, Saniya! Now let's cover **Questions 21 to 25** ‚Äî again with **Detailed Version ‚Üí Short Version ‚Üí Hindi Explanation**.

---

### **21. How to Set Permissions Using Symbolic and Numeric Modes?**

#### ‚úÖ Detailed Version (English):

There are two ways to set file/folder permissions in Linux:

#### ‚û§ Symbolic Mode:

```bash
chmod u+x file.txt        # Add execute to user
chmod g-w file.txt        # Remove write from group
chmod o=r file.txt        # Set read-only for others
```

* `u` = user, `g` = group, `o` = others
* `+` = add, `-` = remove, `=` = assign

#### ‚û§ Numeric Mode:

Each permission has a value:

* r = 4, w = 2, x = 1

Examples:

* `chmod 755 file.txt` ‚Üí rwxr-xr-x
* `chmod 644 file.txt` ‚Üí rw-r--r--

#### ‚úÖ Short Version (English):

* Symbolic: `chmod u+x file`
* Numeric: `chmod 755 file`

#### ‚úÖ Hindi Explanation:

**‡§¶‡•ã ‡§§‡§∞‡•Ä‡§ï‡•ã‡§Ç ‡§∏‡•á ‡§™‡§∞‡§Æ‡§ø‡§∂‡§® ‡§∏‡•á‡§ü ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç:**

‚úÖ Symbolic:

* `chmod u+x file` ‚Üí ‡§Ø‡•Ç‡§ú‡§º‡§∞ ‡§ï‡•ã ‡§è‡§ï‡•ç‡§∏‡§ø‡§ï‡•ç‡§Ø‡•Ç‡§ü

‚úÖ Numeric:

* `chmod 755 file` ‚Üí rwxr-xr-x

---

### **22. What is umask?**

#### ‚úÖ Detailed Version (English):

**umask** (User Mask) defines default permissions **subtracted** when a new file or folder is created.

* Default permissions:

  * File: `666` (rw-rw-rw-)
  * Dir: `777` (rwxrwxrwx)

If umask is `022`:

* File ‚Üí `644` (rw-r--r--)
* Dir ‚Üí `755` (rwxr-xr-x)

Check umask:

```bash
umask
```

#### ‚úÖ Short Version (English):

umask sets default file/dir permissions by subtracting from 666/777.

#### ‚úÖ Hindi Explanation:

**umask** ‡§®‡§Ø‡§æ ‡§´‡§æ‡§á‡§≤/‡§°‡§æ‡§Ø‡§∞‡•á‡§ï‡•ç‡§ü‡§∞‡•Ä ‡§¨‡§®‡§æ‡§®‡•á ‡§™‡§∞ ‡§°‡§ø‡§´‡•â‡§≤‡•ç‡§ü ‡§™‡§∞‡§Æ‡§ø‡§∂‡§® ‡§§‡§Ø ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§
‡§â‡§¶‡§æ‡§π‡§∞‡§£: umask 022 ‚Üí ‡§´‡§æ‡§á‡§≤ 644, ‡§°‡§æ‡§Ø‡§∞‡•á‡§ï‡•ç‡§ü‡§∞‡•Ä 755

---

### **23. Default Permissions for Root User for File/Directory**

#### ‚úÖ Detailed Version (English):

By default:

* File ‚Üí 666 (rw-rw-rw-)
* Directory ‚Üí 777 (rwxrwxrwx)

But actual permissions depend on the **umask value**, usually `0022`:

So effective permissions:

* File: 666 - 022 = **644**
* Dir: 777 - 022 = **755**

Root can override any permission.

#### ‚úÖ Short Version (English):

Root default:

* File: 644
* Directory: 755

#### ‚úÖ Hindi Explanation:

Root ‡§ï‡•á ‡§≤‡§ø‡§è ‡§°‡§ø‡§´‡•â‡§≤‡•ç‡§ü ‡§™‡§∞‡§Æ‡§ø‡§∂‡§®:

* ‡§´‡§æ‡§á‡§≤: 644
* ‡§°‡§æ‡§Ø‡§∞‡•á‡§ï‡•ç‡§ü‡§∞‡•Ä: 755
  (umask 022 ‡§ï‡•á ‡§ï‡§æ‡§∞‡§£)

---

### **24. Default Permissions for Local User for File/Directory**

#### ‚úÖ Detailed Version (English):

Same concept applies to regular/local users.

Default umask for users is usually `002` or `022`:

* If `002` ‚Üí File: 664, Dir: 775
* If `022` ‚Üí File: 644, Dir: 755

Check with:

```bash
umask
```

#### ‚úÖ Short Version (English):

Local user default = file 644, dir 755 (usually)

#### ‚úÖ Hindi Explanation:

Local user ‡§ï‡•á ‡§≤‡§ø‡§è ‡§°‡§ø‡§´‡•â‡§≤‡•ç‡§ü ‡§™‡§∞‡§Æ‡§ø‡§∂‡§®:

* ‡§´‡§æ‡§á‡§≤: 644
* ‡§°‡§æ‡§Ø‡§∞‡•á‡§ï‡•ç‡§ü‡§∞‡•Ä: 755
  (depends on umask)

---

### **25. Explain Crontab Fields**

#### ‚úÖ Detailed Version (English):

Crontab is used to schedule tasks. It has **5 time fields + 1 command**:

```
*  *  *  *  *  command
|  |  |  |  |
|  |  |  |  +----- Day of the week (0-6, Sunday=0)
|  |  |  +-------- Month (1-12)
|  |  +----------- Day of month (1-31)
|  +-------------- Hour (0-23)
+----------------- Minute (0-59)
```

**Example:**

```bash
0 5 * * 1 /home/saniya/backup.sh
```

‚Üí Runs every Monday at 5:00 AM

#### ‚úÖ Short Version (English):

Fields: min hour day month weekday command

#### ‚úÖ Hindi Explanation:

Crontab ‡§Æ‡•á‡§Ç 6 ‡§ö‡•Ä‡§ú‡§º‡•á‡§Ç ‡§π‡•ã‡§§‡•Ä ‡§π‡•à‡§Ç:

1. ‡§Æ‡§ø‡§®‡§ü
2. ‡§ò‡§Ç‡§ü‡§æ
3. ‡§Æ‡§π‡•Ä‡§®‡•á ‡§ï‡§æ ‡§¶‡§ø‡§®
4. ‡§Æ‡§π‡•Ä‡§®‡§æ
5. ‡§π‡§´‡•ç‡§§‡•á ‡§ï‡§æ ‡§¶‡§ø‡§®
6. ‡§ï‡§Æ‡§æ‡§Ç‡§°

‡§â‡§¶‡§æ‡§π‡§∞‡§£:

```bash
0 0 * * * cmd
```

‚Üí ‡§π‡§∞ ‡§¶‡§ø‡§® ‡§∞‡§æ‡§§ 12 ‡§¨‡§ú‡•á ‡§∞‡§® ‡§π‡•ã‡§ó‡§æ‡•§

Perfect, Saniya! We've completed questions **1 to 25**. Let's now continue with the remaining:

---

## ‚úÖ Questions 26 to 30 ‚Äî Detailed + Short + Hindi

---

### **26. Explain `top` Command**

#### ‚úÖ Detailed Version:

The `top` command displays real-time system information:

* Running processes
* CPU & memory usage
* Process IDs (PID)
* Uptime and load average

To run:

```bash
top
```

Useful keys:

* `q` ‚Üí quit
* `k` ‚Üí kill a process
* `P` ‚Üí sort by CPU
* `M` ‚Üí sort by memory

#### ‚úÖ Short Version:

`top` shows live CPU, memory, and process usage.

#### ‚úÖ Hindi:

`top` ‡§ï‡§Æ‡§æ‡§Ç‡§° CPU, ‡§Æ‡•á‡§Æ‡•ã‡§∞‡•Ä ‡§î‡§∞ ‡§™‡•ç‡§∞‡•ã‡§∏‡•á‡§∏ ‡§ï‡•Ä ‡§≤‡§æ‡§á‡§µ ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§¶‡§ø‡§ñ‡§æ‡§§‡•Ä ‡§π‡•à‡•§
‡§™‡•ç‡§∞‡•á‡§∏ `q` ‡§¨‡§Ç‡§¶ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è‡•§

---

### **27. Explain `ps` Command**

#### ‚úÖ Detailed Version:

`ps` (process status) displays information about currently running processes.

Basic usage:

```bash
ps         # current shell processes
ps -e      # all processes
ps aux     # detailed info with user, CPU, memory
```

#### ‚úÖ Short Version:

`ps` shows currently running processes.

#### ‚úÖ Hindi:

`ps` ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§∏‡•á ‡§Ü‡§™ ‡§∞‡§® ‡§π‡•ã ‡§∞‡§π‡•á ‡§™‡•ç‡§∞‡•ã‡§∏‡•á‡§∏ ‡§¶‡•á‡§ñ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§

---

### **28. Explain `grep` Command**

#### ‚úÖ Detailed Version:

`grep` is used to search text patterns in files.

Examples:

```bash
grep "error" logfile.txt       # find 'error' in file
ps aux | grep ssh              # find running ssh process
grep -i "saniya" data.txt      # case-insensitive search
```

#### ‚úÖ Short Version:

`grep` searches for a pattern in text/files.

#### ‚úÖ Hindi:

`grep` ‡§∏‡•á ‡§Ü‡§™ ‡§ï‡§ø‡§∏‡•Ä ‡§∂‡§¨‡•ç‡§¶ ‡§Ø‡§æ ‡§™‡•à‡§ü‡§∞‡•ç‡§® ‡§ï‡•ã ‡§´‡§æ‡§á‡§≤ ‡§Æ‡•á‡§Ç ‡§¢‡•Ç‡§Ç‡§¢ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§

---

### **29. How to Archive, Compress, and Extract Files?**

#### ‚úÖ Detailed Version:

**To archive (tar):**

```bash
tar -cvf file.tar folder/
```

**To compress (gzip):**

```bash
gzip file.txt
```

**To extract:**

```bash
tar -xvf file.tar
gunzip file.txt.gz
```

**To archive + compress:**

```bash
tar -czvf file.tar.gz folder/
tar -xzvf file.tar.gz
```

#### ‚úÖ Short Version:

Use `tar` for archive, `gzip` for compress, `gunzip` to extract.

#### ‚úÖ Hindi:

* Archive: `tar -cvf`
* Compress: `gzip`
* Extract: `tar -xvf` ‡§Ø‡§æ `gunzip`

---

### **30. Explain OSI Model**

#### ‚úÖ Detailed Version:

The **OSI Model** is a 7-layer model for network communication.

| Layer No | Name         | Function                    |
| -------- | ------------ | --------------------------- |
| 7        | Application  | User interface              |
| 6        | Presentation | Data format, encryption     |
| 5        | Session      | Start/end connections       |
| 4        | Transport    | Reliable delivery (TCP/UDP) |
| 3        | Network      | Routing, IP addressing      |
| 2        | Data Link    | MAC address, switching      |
| 1        | Physical     | Hardware (cables, signals)  |

#### ‚úÖ Short Version:

OSI = 7 Layers: App, Pres, Sess, Trans, Net, Data Link, Physical.

#### ‚úÖ Hindi:

OSI ‡§Æ‡•â‡§°‡§≤ ‡§ï‡•á 7 ‡§≤‡•á‡§Ø‡§∞ ‡§π‡•ã‡§§‡•á ‡§π‡•à‡§Ç:

1. Physical
2. Data Link
3. Network
4. Transport
5. Session
6. Presentation
7. Application

---

Awesome, Saniya! Let‚Äôs wrap up the final **Questions 31 to 34** ‚Äî each with **Detailed + Short + Hindi Explanation**.

---

## ‚úÖ Questions 31 to 34 ‚Äî Final Set

---

### **31. Difference Between TCP and UDP**

#### ‚úÖ Detailed Version:

| Feature         | TCP                                | UDP                        |
| --------------- | ---------------------------------- | -------------------------- |
| Full Form       | Transmission Control Protocol      | User Datagram Protocol     |
| Connection      | Connection-oriented                | Connectionless             |
| Reliability     | Reliable (acknowledgements, retry) | Not reliable               |
| Speed           | Slower (more overhead)             | Faster (less overhead)     |
| Use Cases       | Web, Email, File transfer (FTP)    | Video streaming, VoIP, DNS |
| Packet Delivery | Guaranteed in order                | Not guaranteed, may drop   |

#### ‚úÖ Short Version:

* TCP: Reliable, slower, ordered
* UDP: Unreliable, faster, unordered

#### ‚úÖ Hindi:

* **TCP**: ‡§ï‡§®‡•á‡§ï‡•ç‡§∂‡§®-‡§ì‡§∞‡§ø‡§è‡§Ç‡§ü‡•á‡§°, ‡§≠‡§∞‡•ã‡§∏‡•á‡§Æ‡§Ç‡§¶
* **UDP**: ‡§ï‡§®‡•á‡§ï‡•ç‡§∂‡§®‡§≤‡•á‡§∏, ‡§§‡•á‡§ú‡§º, ‡§ï‡§≠‡•Ä-‡§ï‡§≠‡•Ä ‡§™‡•à‡§ï‡•á‡§ü ‡§Æ‡§ø‡§∏ ‡§π‡•ã ‡§∏‡§ï‡§§‡§æ ‡§π‡•à

---

### **32. Basic Networking Commands**

#### ‚úÖ Detailed Version:

| Command                     | Description                      |
| --------------------------- | -------------------------------- |
| `ip a` or `ifconfig`        | Show IP address and network info |
| `ping google.com`           | Check connectivity               |
| `traceroute` or `tracepath` | Show route taken by packet       |
| `netstat -tuln`             | Show listening ports             |
| `ss -tuln`                  | Modern replacement for netstat   |
| `nslookup` or `dig`         | DNS lookup                       |
| `hostname`                  | Show system hostname             |
| `curl` / `wget`             | Fetch URL content                |

#### ‚úÖ Short Version:

* `ip a`, `ping`, `netstat`, `traceroute`, `nslookup`, `hostname`

#### ‚úÖ Hindi:

‡§®‡•á‡§ü‡§µ‡§∞‡•ç‡§ï ‡§∏‡•á ‡§ú‡•Å‡§°‡§º‡•á ‡§ú‡§∞‡•Ç‡§∞‡•Ä ‡§ï‡§Æ‡§æ‡§Ç‡§°‡•ç‡§∏:

* `ip a` ‚Äì IP ‡§¶‡•á‡§ñ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è
* `ping` ‚Äì ‡§®‡•á‡§ü‡§µ‡§∞‡•ç‡§ï ‡§ï‡§®‡•á‡§ï‡•ç‡§∂‡§® ‡§ö‡•á‡§ï
* `netstat` ‚Äì ‡§ï‡•å‡§® ‡§∏‡•á ‡§™‡•ã‡§∞‡•ç‡§ü ‡§ñ‡•Å‡§≤‡•á ‡§π‡•à‡§Ç
* `traceroute` ‚Äì ‡§™‡•à‡§ï‡•á‡§ü ‡§ï‡§æ ‡§∞‡§æ‡§∏‡•ç‡§§‡§æ
* `nslookup` ‚Äì DNS ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä

---

### **33. Explain IP Classes**

#### ‚úÖ Detailed Version:

There are 5 IP address classes (based on first octet):

| Class | Range                       | Usage           | Default Subnet Mask |
| ----- | --------------------------- | --------------- | ------------------- |
| A     | 1.0.0.0 ‚Äì 126.x.x.x         | Large networks  | 255.0.0.0           |
| B     | 128.0.0.0 ‚Äì 191.255.x.x     | Medium networks | 255.255.0.0         |
| C     | 192.0.0.0 ‚Äì 223.255.255.x   | Small networks  | 255.255.255.0       |
| D     | 224.0.0.0 ‚Äì 239.255.255.255 | Multicasting    | N/A                 |
| E     | 240.0.0.0 ‚Äì 255.255.255.255 | Research only   | N/A                 |

#### ‚úÖ Short Version:

* A: Large (1‚Äì126)
* B: Medium (128‚Äì191)
* C: Small (192‚Äì223)

#### ‚úÖ Hindi:

IP ‡§ï‡•ç‡§≤‡§æ‡§∏ ‡§ï‡•á ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞:

* **Class A**: ‡§¨‡§°‡§º‡•Ä ‡§ï‡§Ç‡§™‡§®‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è
* **Class B**: ‡§Æ‡•Ä‡§°‡§ø‡§Ø‡§Æ ‡§®‡•á‡§ü‡§µ‡§∞‡•ç‡§ï
* **Class C**: ‡§õ‡•ã‡§ü‡•á ‡§®‡•á‡§ü‡§µ‡§∞‡•ç‡§ï
* **Class D/E**: ‡§ñ‡§æ‡§∏ ‡§ï‡§æ‡§Æ‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è (Multicast/Research)

---

### **34. Difference Between Public and Private IP Addresses**

#### ‚úÖ Detailed Version:

| Type    | Description                  | Example Ranges                         |
| ------- | ---------------------------- | -------------------------------------- |
| Public  | Accessible over the internet | 8.8.8.8, 123.45.67.89                  |
| Private | Internal use only (LAN)      | Class A: 10.0.0.0 ‚Äì 10.255.255.255     |
|         |                              | Class B: 172.16.0.0 ‚Äì 172.31.255.255   |
|         |                              | Class C: 192.168.0.0 ‚Äì 192.168.255.255 |

* Public IPs are assigned by ISPs.
* Private IPs are used in homes/offices, behind routers.

#### ‚úÖ Short Version:

* **Public**: Internet-visible (e.g., 8.8.8.8)
* **Private**: Local network only (e.g., 192.168.1.1)

#### ‚úÖ Hindi:

* **Public IP**: ‡§á‡§Ç‡§ü‡§∞‡§®‡•á‡§ü ‡§™‡§∞ ‡§¶‡§ø‡§ñ‡§§‡•Ä ‡§π‡•à
* **Private IP**: ‡§ò‡§∞/‡§ë‡§´‡§ø‡§∏ ‡§Æ‡•á‡§Ç ‡§á‡§Ç‡§ü‡§∞‡§®‡§≤ ‡§Ø‡•Ç‡§ú‡§º ‡§ï‡•á ‡§≤‡§ø‡§è
  ‡§â‡§¶‡§æ‡§π‡§∞‡§£:
* Public: 8.8.8.8
* Private: 192.168.x.x

---


